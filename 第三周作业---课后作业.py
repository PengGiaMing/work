#1.编写一个函数完成密码生成器的功能，输入参数有密码长度和密码组成的内容，
#  密码组成的内容可以有大写字母（A-Z）、小写字母（a-z）、数字（0-9）、特殊符号（~!@#$%^&*()），
#  返回值为按照用户要求生成的随机密码

import random
import string

user_list = []

def judge1():
    user_txt = input("请输入你的密码内容:")
    user_length = int(input("请输入你的密码长度:"))
    for i in range(user_length):
        password = random.choice(user_txt)
        user_list.append(password)
        result = "".join(user_list)
    print(f"系统为你生成的随机密码为:{result}")
    del result
    gc.collect()

judge1()

#2.输入参数为一个整数列表和一个整数，判断该整数是否存在于该列表中。如果存在，是在列表的左半边还是右半边

def judge2(number,lst):
	b=-1
	c=0
	d=[]
	for a in lst:
		if a==number:
			print("列表里有元素%d" %(number))
			c=1
			break
	if c==0:
		print("列表里不存在元素%d" %(number))
	else:
            b = lst.index(number,b+1)
            d.append(b)
            for a in d:
	        if (len(lst) - 1) / 2 > a:
		    print("左边有一个")
		elif (len(lst)-1) / 2 < a:
	            print("右边有一个")
		else:
		    print("正好在中间有一个")

#3.过滤1-100中的素数

import math
def fil(n):
    flag = 0
    for i in range(2,int(math.sqrt(n)+1)):
        if n%i == 0:
            flag = 1
            break
    if flag == 1:
        return n

print(list(filter(fil,range(1,101))))

#4.编写一个模块，
#  要求里面有变量x和y，两数相加add(x, y)，两数相减sub(x, y)，两数相乘mul(x, y)，两数相除div(x, y)这四个方法的实现

import demo
add(x,y)
sub(x,y)
mul(x,y)
div(x,y)

#5.输入参数是一个整数列表，请找出该列表中最小的整数并返回

def min5(lst):
    n = sorted(set(lst))
    print(n[0])

min5([9,3,8,1,0,3,5])
          